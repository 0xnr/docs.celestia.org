(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{604:function(e,t,a){"use strict";a.r(t);var o=a(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"networking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networking"}},[e._v("#")]),e._v(" Networking")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#wire-format"}},[e._v("Wire Format")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#availabledata"}},[e._v("AvailableData")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#availabledatarow"}},[e._v("AvailableDataRow")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#consensusproposal"}},[e._v("ConsensusProposal")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#wiretxpayformessage"}},[e._v("WireTxPayForMessage")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#invalid-erasure-coding"}},[e._v("Invalid Erasure Coding")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#badencodingfraudproof"}},[e._v("BadEncodingFraudProof")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#invalid-state-update"}},[e._v("Invalid State Update")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#statefraudproof"}},[e._v("StateFraudProof")])])])])]),e._v(" "),a("h2",{attrs:{id:"wire-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wire-format"}},[e._v("#")]),e._v(" Wire Format")]),e._v(" "),a("h3",{attrs:{id:"availabledata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#availabledata"}},[e._v("#")]),e._v(" AvailableData")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("name")]),e._v(" "),a("th",[e._v("type")]),e._v(" "),a("th",[e._v("description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("availableDataRows")])]),e._v(" "),a("td",[a("a",{attrs:{href:"#availabledatarow"}},[e._v("AvailableDataRow")]),a("code",[e._v("[]")])]),e._v(" "),a("td",[e._v("List of rows.")])])])]),e._v(" "),a("h3",{attrs:{id:"availabledatarow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#availabledatarow"}},[e._v("#")]),e._v(" AvailableDataRow")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("name")]),e._v(" "),a("th",[e._v("type")]),e._v(" "),a("th",[e._v("description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("shares")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#share"}},[e._v("Share")]),a("code",[e._v("[]")])],1),e._v(" "),a("td",[e._v("Shares in a row.")])])])]),e._v(" "),a("h3",{attrs:{id:"consensusproposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consensusproposal"}},[e._v("#")]),e._v(" ConsensusProposal")]),e._v(" "),a("p",[e._v("Defined as "),a("code",[e._v("ConsensusProposal")]),e._v(":")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"protobuf",base64:"bWVzc2FnZSBDb25zZW5zdXNQcm9wb3NhbCB7CiAgU2lnbmVkTXNnVHlwZSB0eXBlID0gMTsKICBpbnQzMiByb3VuZCA9IDI7CiAgaW50MzIgcG9sX3JvdW5kID0gMzsKICAvLyAzMi1ieXRlIGhhc2gKICAvLyBQcm9wb3NlZCBibG9jayBoZWFkZXIKICBIZWFkZXIgaGVhZGVyID0gNDsKICBBdmFpbGFibGVEYXRhSGVhZGVyIGRhX2hlYWRlciA9IDU7CiAgLy8gNjQtYnl0ZSBzaWduYXR1cmUKICBieXRlcyBwcm9wb3Nlcl9zaWduYXR1cmUgPSA2Owp9Cg=="}}),e._v(" "),a("p",[e._v("When receiving a new block proposal "),a("code",[e._v("proposal")]),e._v(" from the network, the following steps are performed in order. "),a("em",[e._v("Must")]),e._v(" indicates that peers must be blacklisted (to prevent DoS attacks) and "),a("em",[e._v("should")]),e._v(" indicates that the network message can simply be ignored.")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("proposal.type")]),e._v(" must be a "),a("code",[e._v("SignedMsgType")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("proposal.round")]),e._v(" is processed identically to Tendermint.")]),e._v(" "),a("li",[a("code",[e._v("proposal.pol_round")]),e._v(" is processed identically to Tendermint.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header")]),e._v(" must be well-formed.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.version.block")]),e._v(" must be "),a("RouterLink",{attrs:{to:"/specs/consensus.html#constants"}},[a("code",[e._v("VERSION_BLOCK")])]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.version.app")]),e._v(" must be "),a("RouterLink",{attrs:{to:"/specs/consensus.html#constants"}},[a("code",[e._v("VERSION_APP")])]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.height")]),e._v(" should be previous known height + 1.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.chain_id")]),e._v(" must be "),a("RouterLink",{attrs:{to:"/specs/consensus.html#constants"}},[a("code",[e._v("CHAIN_ID")])]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.time")]),e._v(" is processed identically to Tendermint.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.last_header_hash")]),e._v(" must be previous block's header hash.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.last_commit_hash")]),e._v(" must be the previous block's commit hash.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.consensus_hash")]),e._v(" must be the hash of "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("consensus parameters")]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.state_commitment")]),e._v(" must be the state root after applying the previous block's transactions.")]),e._v(" "),a("li",[a("code",[e._v("proposal.header.available_data_original_shares_used")]),e._v(" must be at most "),a("RouterLink",{attrs:{to:"/specs/consensus.html#constants"}},[a("code",[e._v("AVAILABLE_DATA_ORIGINAL_SQUARE_MAX ** 2")])]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.available_data_root")]),e._v(" must be the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#availabledataheader"}},[e._v("root")]),e._v(" of "),a("code",[e._v("proposal.da_header")]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.header.proposer_address")]),e._v(" must be the "),a("RouterLink",{attrs:{to:"/specs/consensus.html#leader-selection"}},[e._v("correct leader")]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.da_header")]),e._v(" must be well-formed.")]),e._v(" "),a("li",[e._v("The number of elements in "),a("code",[e._v("proposal.da_header.row_roots")]),e._v(" and "),a("code",[e._v("proposal.da_header.row_roots")]),e._v(" must be equal.")]),e._v(" "),a("li",[e._v("The number of elements in "),a("code",[e._v("proposal.da_header.row_roots")]),e._v(" must be the same as computed "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("here")]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("proposal.proposer_signature")]),e._v(" must be a valid "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#public-key-cryptography"}},[e._v("digital signature")]),e._v(" over the header hash of "),a("code",[e._v("proposal.header")]),e._v(" that recovers to "),a("code",[e._v("proposal.header.proposer_address")]),e._v(".")],1),e._v(" "),a("li",[e._v("For "),a("RouterLink",{attrs:{to:"/specs/node_types.html#node-type-definitions"}},[e._v("full nodes")]),e._v(", "),a("code",[e._v("proposal.da_header")]),e._v(" must be the result of computing the roots of the shares (received separately).")],1),e._v(" "),a("li",[e._v("For "),a("RouterLink",{attrs:{to:"/specs/node_types.html#node-type-definitions"}},[e._v("light nodes")]),e._v(", "),a("code",[e._v("proposal.da_header")]),e._v(" should be sampled from for availability.")],1)]),e._v(" "),a("h3",{attrs:{id:"wiretxpayformessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wiretxpayformessage"}},[e._v("#")]),e._v(" WireTxPayForMessage")]),e._v(" "),a("p",[e._v("Defined as "),a("code",[e._v("WireTxPayForMessage")]),e._v(":")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"protobuf",base64:"bWVzc2FnZSBXaXJlVHhQYXlGb3JNZXNzYWdlIHsKICBUcmFuc2FjdGlvbkZlZSBmZWUgPSAxOwogIHVpbnQ2NCBub25jZSA9IDI7CiAgLy8gOC1ieXRlIG5hbWVzcGFjZSBJRAogIGJ5dGVzIG1lc3NhZ2VfbmFtZXNwYWNlX2lkID0gMzsKICB1aW50NjQgbWVzc2FnZV9zaXplID0gNDsKICBieXRlcyBtZXNzYWdlID0gNTsKICByZXBlYXRlZCBNZXNzYWdlQ29tbWl0bWVudEFuZFNpZ25hdHVyZSBtZXNzYWdlX2NvbW1pdG1lbnRfYW5kX3NpZ25hdHVyZSA9IDY7Cn0K"}}),e._v(" "),a("p",[e._v("Accepting a "),a("code",[e._v("WireTxPayForMessage")]),e._v(" into the mempool requires different logic than other transactions in Celestia, since it leverages the paradigm of block proposers being able to malleate transaction data. Unlike "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#signedtransactiondatapayformessage"}},[e._v("SignedTransactionDataPayForMessage")]),e._v(" (the canonical data type that is included in blocks and committed to with a data root in the block header), each "),a("code",[e._v("WireTxPayForMessage")]),e._v(" (the over-the-wire representation of the same) has potentially multiple signatures.")],1),e._v(" "),a("p",[e._v("Transaction senders who want to pay for a message will create a "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#signedtransactiondatapayformessage"}},[e._v("SignedTransactionDataPayForMessage")]),e._v(" object, "),a("code",[e._v("stx")]),e._v(", filling in the "),a("code",[e._v("stx.messageShareCommitment")]),e._v(" field "),a("RouterLink",{attrs:{to:"/rationale/message_block_layout.html#non-interactive-default-rules"}},[e._v("based on the non-interactive default rules")]),e._v(" for "),a("code",[e._v("k = AVAILABLE_DATA_ORIGINAL_SQUARE_MAX")]),e._v(", then signing it to get a "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#transaction"}},[e._v("transaction")]),e._v(" "),a("code",[e._v("tx")]),e._v(". This process is repeated with successively smaller "),a("code",[e._v("k")]),e._v("s, decreasing by powers of 2 until "),a("code",[e._v("k * k <= stx.messageSize")]),e._v(". At that point, there would be insufficient shares to include both the message and transaction. Using the rest of the signed transaction data along with the pairs of "),a("code",[e._v("(tx.signedTransactionData.messageShareCommitment, tx.signature)")]),e._v(", a "),a("code",[e._v("WireTxPayForMessage")]),e._v(" object is constructed.")],1),e._v(" "),a("p",[e._v("Receiving a "),a("code",[e._v("WireTxPayForMessage")]),e._v(" object from the network follows the reverse process: for each "),a("code",[e._v("message_commitment_and_signature")]),e._v(", verify using the "),a("RouterLink",{attrs:{to:"/rationale/message_block_layout.html#non-interactive-default-rules"}},[e._v("based on the non-interactive default rules")]),e._v(" that the signature is valid.")],1),e._v(" "),a("h2",{attrs:{id:"invalid-erasure-coding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invalid-erasure-coding"}},[e._v("#")]),e._v(" Invalid Erasure Coding")]),e._v(" "),a("p",[e._v("If a malicious block producer incorrectly computes the 2D Reed-Solomon code for a block's data, a fraud proof for this can be presented. We assume that the light clients have the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#availabledataheader"}},[e._v("AvailableDataHeader")]),e._v(" and the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("Header")]),e._v(" for each block. Hence, given a "),a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")]),e._v(", they can verify if the "),a("code",[e._v("rowRoot")]),e._v(" or "),a("code",[e._v("colRoot")]),e._v(" specified by "),a("code",[e._v("isCol")]),e._v(" and "),a("code",[e._v("position")]),e._v(" commits to the corresponding "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#share"}},[e._v("Share")]),e._v(". Similarly, given the "),a("code",[e._v("height")]),e._v(" of a block, they can access all elements within the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#availabledataheader"}},[e._v("AvailableDataHeader")]),e._v(" and the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("Header")]),e._v(" of the block.")],1),e._v(" "),a("h3",{attrs:{id:"shareproof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareproof"}},[e._v("#")]),e._v(" ShareProof")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("name")]),e._v(" "),a("th",[e._v("type")]),e._v(" "),a("th",[e._v("description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("share")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#share"}},[e._v("Share")])],1),e._v(" "),a("td",[e._v("The share.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("proof")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#namespacemerkletreeinclusionproof"}},[e._v("NamespaceMerkleTreeInclusionProof")])],1),e._v(" "),a("td",[e._v("The Merkle proof of the share in the offending row or column root.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("isCol")])]),e._v(" "),a("td",[a("code",[e._v("bool")])]),e._v(" "),a("td",[e._v("A Boolean indicating if the proof is from a row root or column root; "),a("code",[e._v("false")]),e._v(" if it is a row root.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("position")])]),e._v(" "),a("td",[a("code",[e._v("uint64")])]),e._v(" "),a("td",[e._v("The index of the share in the offending row or column.")])])])]),e._v(" "),a("h3",{attrs:{id:"badencodingfraudproof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#badencodingfraudproof"}},[e._v("#")]),e._v(" BadEncodingFraudProof")]),e._v(" "),a("p",[e._v("Defined as "),a("code",[e._v("BadEncodingFraudProof")]),e._v(":")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"protobuf",base64:"Ly8gaHR0cHM6Ly9naXRodWIuY29tL2NlbGVzdGlhb3JnL2NlbGVzdGlhLXNwZWNzL2Jsb2IvbWFzdGVyL3NwZWNzL25ldHdvcmtpbmcubWQjYmFkZW5jb2RpbmdmcmF1ZHByb29mCm1lc3NhZ2UgQmFkRW5jb2RpbmdGcmF1ZFByb29mIHsKICAvLyBoZWlnaHQgb2YgdGhlIGJsb2NrIHdpdGggdGhlIG9mZmVuZGluZyByb3cgb3IgY29sdW1uCiAgaW50NjQgaGVpZ2h0ID0gMTsKICAvLyB0aGUgYXZhaWxhYmxlIHNoYXJlcyBpbiB0aGUgb2ZmZW5kaW5nIHJvdyBvciBjb2x1bW4gYW5kIHRoZWlyIE1lcmtsZSBwcm9vZnMKICAvLyBhcnJheSBvZiBTaGFyZVByb29mcwogIHJlcGVhdGVkIFNoYXJlUHJvb2Ygc2hhcmVQcm9vZnMgPSAyOwogIC8vIGEgQm9vbGVhbiBpbmRpY2F0aW5nIGlmIGl0IGlzIGFuIG9mZmVuZGluZyByb3cgb3IgY29sdW1uOyBmYWxzZSBpZiBpdCBpcyBhIHJvdwogIGJvb2wgaXNDb2wgPSAzOwogIC8vIHRoZSBpbmRleCBvZiB0aGUgb2ZmZW5kaW5nIHJvdyBvciBjb2x1bW4gaW4gdGhlIHNxdWFyZQogIHVpbnQ2NCBwb3NpdGlvbiA9IDQ7Cn0K"}}),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("name")]),e._v(" "),a("th",[e._v("type")]),e._v(" "),a("th",[e._v("description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("height")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#type-aliases"}},[e._v("Height")])],1),e._v(" "),a("td",[e._v("Height of the block with the offending row or column.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("shareProofs")])]),e._v(" "),a("td",[a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")]),a("code",[e._v("[]")])]),e._v(" "),a("td",[e._v("The available shares in the offending row or column.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("isCol")])]),e._v(" "),a("td",[a("code",[e._v("bool")])]),e._v(" "),a("td",[e._v("A Boolean indicating if it is an offending row or column; "),a("code",[e._v("false")]),e._v(" if it is a row.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("position")])]),e._v(" "),a("td",[a("code",[e._v("uint64")])]),e._v(" "),a("td",[e._v("The index of the offending row or column in the square.")])])])]),e._v(" "),a("h2",{attrs:{id:"invalid-state-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invalid-state-update"}},[e._v("#")]),e._v(" Invalid State Update")]),e._v(" "),a("p",[e._v("If a malicious block producer incorrectly computes the state, a fraud proof for this can be presented. We assume that the light clients have the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#availabledataheader"}},[e._v("AvailableDataHeader")]),e._v(" and the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("Header")]),e._v(" for each block. Hence, given a "),a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")]),e._v(", they can verify if the "),a("code",[e._v("rowRoot")]),e._v(" or "),a("code",[e._v("colRoot")]),e._v(" specified by "),a("code",[e._v("isCol")]),e._v(" and "),a("code",[e._v("position")]),e._v(" commits to the corresponding "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#share"}},[e._v("Share")]),e._v(". Similarly, given the "),a("code",[e._v("height")]),e._v(" of a block, they can access all elements within the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#availabledataheader"}},[e._v("AvailableDataHeader")]),e._v(" and the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#header"}},[e._v("Header")]),e._v(" of the block.")],1),e._v(" "),a("h3",{attrs:{id:"statefraudproof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statefraudproof"}},[e._v("#")]),e._v(" StateFraudProof")]),e._v(" "),a("p",[e._v("Defined as "),a("code",[e._v("StateFraudProof")]),e._v(":")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"protobuf",base64:"Ly8gaHR0cHM6Ly9naXRodWIuY29tL2NlbGVzdGlhb3JnL2NlbGVzdGlhLXNwZWNzL2Jsb2IvbWFzdGVyL3NwZWNzL25ldHdvcmtpbmcubWQjc3RhdGVmcmF1ZHByb29mCm1lc3NhZ2UgU3RhdGVGcmF1ZFByb29mIHsKICAvLyBoZWlnaHQgb2YgdGhlIGJsb2NrIHdpdGggdGhlIGludGVybWVkaWF0ZSBzdGF0ZSByb290cyAKICAvLyBTdWJ0cmFjdGluZyBvbmUgZnJvbSBoZWlnaHQgZ2l2ZXMgdGhlIGhlaWdodCBvZiB0aGUgYmxvY2sgd2l0aCB0aGUgdHJhbnNhY3Rpb25zLgogIGludDY0IGhlaWdodCA9IDE7CiAgLy8gc2hhcmVzIGNvbnRhaW5pbmcgdGhlIHRyYW5zYWN0aW9ucyBhbmQgdGhlaXIgTWVya2xlIHByb29mcwogIC8vIGlzQ29sIHdpdGhpbiB0aGUgU2hhcmVQcm9vZiBtdXN0IGJlIGZhbHNlLgogIC8vIGFycmF5IG9mIFNoYXJlUHJvb2ZzCiAgcmVwZWF0ZWQgU2hhcmVQcm9vZiB0cmFuc2FjdGlvblNoYXJlUHJvb2ZzID0gMjsKICAvLyBzaGFyZXMgY29udGFpbmluZyB0aGUgaW50ZXJtZWRpYXRlIHN0YXRlIHJvb3RzIGFuZCB0aGVpciBNZXJrbGUgcHJvb2ZzCiAgLy8gaXNDb2wgd2l0aGluIHRoZSBTaGFyZVByb29mIG11c3QgYmUgZmFsc2UuCiAgLy8gYXJyYXkgb2YgU2hhcmVQcm9vZnMKICByZXBlYXRlZCBTaGFyZVByb29mIGlzclNoYXJlUHJvb2ZzID0gMzsKICAvLyBpbmRleCBmb3IgY29ubmVjdGluZyB0aGUgV3JhcHBlZEludGVybWVkaWF0ZVN0YXRlUm9vdCBhbmQgV3JhcHBlZFRyYW5zYWN0aW9uIGFmdGVyIHNoYXJlcyBhcmUgcGFyc2VkCiAgdWludDY0IGluZGV4ID0gNDsKICAvLyBzdGF0ZSBlbGVtZW50cyB0aGF0IHdlcmUgY2hhbmdlZCBieSB0aGUgdHJhbnNhY3Rpb25zCiAgLy8gYXJyYXkgb2YgU3RhdGVFbGVtZW50cwogIHJlcGVhdGVkIFN0YXRlRWxlbWVudCBpbnRlcm1lZGlhdGVTdGF0ZUVsZW1lbnRzID0gNTsKICAvLyBzcGFyc2UgTWVya2xlIHRyZWUgaW5jbHVzaW9uIHByb29mcyBmb3IgdGhlIHN0YXRlIGVsZW1lbnRzCiAgLy8gYXJyYXkgb2YgU3BhcnNlTWVya2xlVHJlZUluY2x1c2lvblByb29mcwogIHJlcGVhdGVkIFNwYXJzZU1lcmtsZVRyZWVJbmNsdXNpb25Qcm9vZiBzdGF0ZUluY2x1c2lvblByb29mcyA9IDY7Cn0K"}}),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("name")]),e._v(" "),a("th",[e._v("type")]),e._v(" "),a("th",[e._v("description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("height")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#type-aliases"}},[e._v("Height")])],1),e._v(" "),a("td",[e._v("Height of the block with the intermediate state roots. Subtracting one from "),a("code",[e._v("height")]),e._v(" gives the height of the block with the transactions.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("transactionShareProofs")])]),e._v(" "),a("td",[a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")]),a("code",[e._v("[]")])]),e._v(" "),a("td",[a("code",[e._v("isCol")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(" must be "),a("code",[e._v("false")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("isrShareProofs")])]),e._v(" "),a("td",[a("a",{attrs:{href:"#shareproof"}},[e._v("ShareProof")]),a("code",[e._v("[]")])]),e._v(" "),a("td",[a("code",[e._v("isCol")]),e._v(" of type "),a("code",[e._v("bool")]),e._v(" must be "),a("code",[e._v("false")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("index")])]),e._v(" "),a("td",[a("code",[e._v("uint64")])]),e._v(" "),a("td",[e._v("Index for connecting the "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#wrappedintermediatestateroot"}},[e._v("WrappedIntermediateStateRoot")]),e._v(" and "),a("RouterLink",{attrs:{to:"/specs/data_structures.html#wrappedtransaction"}},[e._v("WrappedTransaction")]),e._v(" after shares are parsed.")],1)]),e._v(" "),a("tr",[a("td",[a("code",[e._v("intermediateStateElements")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#stateelement"}},[e._v("StateElement")]),a("code",[e._v("[]")])],1),e._v(" "),a("td",[e._v("State elements that were changed by the transactions.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("stateInclusionProofs")])]),e._v(" "),a("td",[a("RouterLink",{attrs:{to:"/specs/data_structures.html#sparsemerkletreeinclusionproof"}},[e._v("SparseMerkleTreeInclusionProof")]),a("code",[e._v("[]")])],1),e._v(" "),a("td",[e._v("SparseMerkleTree inclusion proofs for the state elements.")])])])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);